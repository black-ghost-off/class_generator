// CODE_BEGIN header
// C generated by class generator: class generator
#ifndef TEST_H
#define TEST_H
// CODE_END

// USER_CODE_BEGIN header

// USER_CODE_END

// CODE_BEGIN include
#include <stdio.h>
// CODE_END

// USER_CODE_BEGIN includes

// USER CODE END

// CODE_BEGIN defines
#define MAX_BUFFER_SIZE 1024
#define MAX_VALUES 1024
// CODE_END

// USER_CODE_BEGIN defines

// USER CODE END

// CODE_BEGIN enums
typedef enum Status {
    OK = 0
    ERROR
    INPROGRESS
    TEST = 10
    TEST2
} Status;

typedef enum TEST {
    OK = 0
    ERROR
    INPROGRESS
    TEST = 10
    TEST2
} TEST;
// CODE_END

// USER_CODE_BEGIN enums

// USER CODE END

// CODE_BEGIN classes
struct test {
    int16_t id;
    int16_t value;
    int16_t array[10];

};
void test_example_function3(int16_t arg1, int32_t arg2);
void test_example_function4(int16_t arg1, float arg2);
struct system {
    int16_t id;
    int16_t voltage0;
    int16_t voltage1;
    int16_t voltage2;

};
void system_example_function(int16_t arg1, double arg2);
// CODE_END

// USER_CODE_BEGIN classes

// USER CODE END

// CODE_BEGIN functions
int16_t example_function1(int32_t arg1, float arg2);
int32_t example_function2(int16_t arg1, float arg2);
// CODE_END

// USER_CODE_BEGIN functions

// USER CODE END